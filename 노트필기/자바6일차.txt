[개발환경 구축]
1. 자바 언어로 개발할 수 있는 플랫폼
	1)javaSE (모든 플랫폼에 공통적으로 사용)
		- 독립 실행형 응용프로그램
	2)javaEE
		- 웹어플리케이션(대형, 기업용 어플리케이션)
	3)javaME
		- 임베디드 어플리케이션(기계, 장치용 어플리케이션)
		- 스마트폰 개발 가능 (android가 대세)

2. classpath
	- 자바는 플랫폼에 중립적이기에 클래스파일의 경로는 classpath라는 시스템 변수를 이용

3. Write Once Run Anywhere
	- jvm(자바가상머신)

[자바기본 문법]
1. 기본자료형
	문자(char): 음수 포함하지 않음 (문자코드를 담아야하기 때문)
	숫자(int)
		실수: float(4), double(8)
		정수: byte(1), short(2), int(4), long(8)
	논리값(boolean)

2. 자료형간 형변환
	(1)문자, 숫자간 가능 (boolean 제외)
		-promotion: 작은 --> 큰 자료형
		-demotion: 큰 --> 작은 자료형
	(2)소괄호 자체가 cast 연산자: 손실을 감안하더라도 원하는 자료형으로 강제로 형변환
	(3)int형 연산시 기본 자료형으로 지정 (가장 최적의 성능)

[클래스]
1. jvm 메모리 구조
	static: 클래스의 원본코드, 메서드
	stack: 모든 지역변수(메서드의 지역변수)
	heap: 인스턴스, constant pool 등

2. 용어
	인스턴스: 클래스로부터 메모리 heap 영역에 생성된 객체를 가리키는 말
	클래스 변수, 메서드: static 수정자가 붙은 변수와 메서드
				인스턴스에 소속되지 않고 클래스 원본에 소속되므로 접근 시
				'클래스명.변수', '클래스명.메서드' 형식으로 접근 가능
	가비지 컬렉션: 개발자가 생성해 놓은 heap 영역의 인스턴스는 jvm의 청소 담당자에 의해
			 의해 소멸되며 개발자가 직접 소멸시키지 못한다
			 안정적인 메로리 관리를 위해 시스템이 직접 담당

3. 인스턴스 초기화 블럭, static 초기화 블럭

4. 메서드
	- getter / setter: 은닉화 (encapsulation)
	- 은닉화란? 클래스 작성시 변수를 보호하고 이 변수에 대한 접근을 개발자가 제공해주는
			메서드를 통해 제어할 수 있는 클래스 정의 기법
	- 관례: get단어, set단어: 단의 첫 철자는 대문자로 작성
	- 오버로딩(overloading): 하나의 클래스내에 메서드명을 동일하게 정의할 수 있는 기법
					  약간 다르다(메서드의 매개변수 개수, 자료형)
					 여러 메서드명을 만들면 직관성이 떨어지기 때문에 오버로딩이 존재
	- 생성자: 생성자 역시 메서드이며 오버로딩을 지원
		    생성자에 반환형을 둘 경우 일반 메서드화되어 인스턴스 생성 능력이 없어진다
	- 개발자가 생성자를 정의하지 않으면 컴파일러에 의해 기본 생성자가 제공되는데
	   이러한 생성자를 가리켜 '디폴트 생성자'라고 한다
	   디폴트 생성자에는 눈에 보이지 않지만 super() 가 생략되어 있다.

5. 상속
	(1)사용목적  - 클래스의 재사용
			- 비슷한 자료형 정의 가능 (상속관계의 자료형간 같은 자료형)
			- 구현 시 extends 키워드 사용(=is a)
	(2)부모의 메서드가 현 개발시점에서 적절하지 않을 경우
	     부모메서드를 업그레이드 할 수 있는데 이를 재정의하는 메서드 정의기법을
	     오버라이딩이라 한다 (완전 동일해야 한다)
	(3)다형성(polymorphism): 특정 자료형이 어느 때는 부모역할, 어느 때는 자식역할을 한다
		ex) Bird b = new Duck();  // 오리가 fly() 메서드를 오버라이드한 경우
		      b.fly();  //오리의 메서드 호출

6. 패키지와 import
	(1)package 사용목적: 클래스명 중복 방지, 관련성 있는 클래스끼리 묶기 위함
	(2)import: 현재 클래스와는 다른 경로에 있는 클래스의 위치를 명시하기 위함
	(3)package, import는 루트 경로를 개발자가 설정한 classpath를 기준으로 한다

7. 자바의 보안 처리
	public < protected < default < private

8. 남이 만든 클래스를 제공받는 경우 원본이 없기 때문에 우리가 해당 클래스의 변수, 메서드를
    사용하려면 어떻게 해야할까? api document를 제공받아야 한다 javadoc.exe
	